#!/usr/bin/make -f

# https://www.debian.org/doc/manuals/maint-guide/dreq.en.html#rules
# See also:
#
# man debhelper
# man dh

# Uncomment this to turn on verbose mode.
# export DH_VERBOSE=1

# $(CURDIR) is the repository directory

M2_REPO = $(CURDIR)/debian/maven-repo-local
CURVERSION = $(shell grep -oPm2 "(?<=<version>)[^<]+" "pom.xml" | tail -1)
# Previously:
# CURVERSION = $(shell mvn -Dmaven.repo.local=$(M2_REPO) -q -Dexec.executable=echo -Dexec.args='$${project.version}' --non-recursive exec:exec)-r$(shell git rev-parse HEAD | cut -c1-7)
# but we don't have the git revision in a debian build from sources without .git directory

%:
	dh $@

override_dh_auto_build:
ifeq ($(filter nobuildjar,$(DEB_BUILD_PROFILES)),)
# This allows to skip the maven jar build (for instance, if its builded by another jenkins job)
# for instance with debuild -us -uc -b --build-profiles=nobuildjar
	mvn -Dmaven.repo.local=$(M2_REPO) -P prod install -DskipTests
endif


override_dh_auto_install:
#	install don't allow to rename files (like wars), so we copy here the file we want to install with the package
	cp $(CURDIR)/target/ipt-$(CURVERSION)-rnull.war $(CURDIR)/target/ipt.war

override_dh_fixperms:
	dh_fixperms
#	If we need to set some special perms to a file
#	chmod 4755 debian/foo/opt/ipt/foo.jar
#	Also we use postinstall for this

#override_dh_install:
#	dh_install # calls default *.install and *.dirs installation
#	man install

override_dh_auto_clean:
	dh_auto_clean
	rm -rf target
