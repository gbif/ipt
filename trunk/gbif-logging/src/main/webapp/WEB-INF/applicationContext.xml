<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:util="http://www.springframework.org/schema/util"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd"
       default-lazy-init="true">
    
	<!-- Because fmt does not nicely allow for multiple files coming from many jars, 
		 we use Spring for the i18n of the plugin harvesters (only) -->
	<!--bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"-->
	<bean id="messageSource" class="org.gbif.logging.webapp.context.support.MultiResourceBundleMessageSource">
		<property name="basenames" value="ApplicationResources"/>
		<property name="useCodeAsDefaultMessage" value="true"/>
	</bean>	
	
	<!-- Daos -->
	<bean id="abstractDao" abstract="true">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="jobDao" class="org.gbif.logging.dao.hibernate.JobDaoHibernate" parent="abstractDao"/>
	<bean id="logEventDao" class="org.gbif.logging.dao.hibernate.LogEventDaoHibernate" parent="abstractDao"/>
	<bean id="bioDatasourceDao" class="org.appfuse.dao.hibernate.GenericDaoHibernate" parent="abstractDao">
		<constructor-arg value="org.gbif.logging.model.BioDatasource"/>
	</bean>
		
	<!-- Managers -->
	<bean id="jobManager" class="org.gbif.logging.service.impl.JobManagerImpl">
        <constructor-arg ref="jobDao"/>
    </bean>
    <bean id="logEventManager" class="org.gbif.logging.service.impl.LogEventManagerImpl">
        <constructor-arg ref="logEventDao"/>
    </bean>
	
	<!-- The launcher that issues the jobs to the plugins -->
	<bean id="biodatasourceOperationLauncher" class="org.gbif.logging.scheduler.BiodatasourceOperationLauncher">
		<property name="logEventDao" ref="logEventDao"/>
		<property name="bioDatasourceDao" ref="bioDatasourceDao"/>
	</bean>
	
	<!-- Configure the i18n Log4J appender -->
	<bean id="i18nDatabaseAppender" class="org.gbif.logging.log.I18nDatabaseAppender">
		<property name="logEventDao" ref="logEventDao"/>
	</bean>
	
	<!-- The resource bundle that handles i18n files from many jars -->
	<bean id="mergedResourceBundleFactory" class="org.gbif.logging.util.MergedResourceBundleFactory">
		<constructor-arg>
			<list>
				<!-- ApplicationResources.properties, ApplicationResources_en_GB.properties etc -->
				<value>ApplicationResources</value>
			</list>
		</constructor-arg>
	</bean>
	
	<!-- Interceptor that will allow for pushing merged resource bundle on to the stack -->
	<!--bean id="mrb2stack" class="org.gbif.logging.webapp.interceptor.MRB2StackInterceptor"/-->
	
	<!-- These are the factories that are loaded as plugins
		 TODO - how do we load these a little better? -->
	<util:list id="harvesterFactories">
		<bean class="org.gbif.logging.biocase.BiocaseHarvesterFactory"/>
		<bean class="org.gbif.logging.tapir.TapirHarvesterFactory"/>
		<bean class="org.gbif.logging.tapirlite.TapirLiteHarvesterFactory"/>
		<bean class="org.gbif.logging.mock.MockHarvesterFactory"/>
	</util:list>
</beans>