<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd"
                        default-lazy-init="true">

    <context:annotation-config/>
    <context:component-scan base-package="org.gbif.provider" /> 

    <!-- Enable @Transactional support -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    
    <!-- application properties -->    
    <bean id="cfg" class="org.gbif.provider.util.AppConfig">
        <property name="appBaseUrl" value="${app.baseUrl}" />
    </bean>


    <!-- security interceptors -->
    <bean id="managerInterceptor" class="org.appfuse.webapp.interceptor.UserRoleAuthorizationInterceptor">
        <property name="authorizedRoles" value="ROLE_MANAGER"/>
    </bean>
    

    <!-- external datasource routing/registry -->
    <bean id="datasourceInterceptor" class="org.gbif.provider.datasource.DatasourceInterceptor">
    </bean>
    
    <bean id="datasourceRegistry" class="org.gbif.provider.datasource.DatasourceRegistry" >
        <property name="occResourceManager" ref="occResourceManager"/>
    </bean>
    
    <bean id="externalResourceRoutingDatasource" class="org.gbif.provider.datasource.ExternalResourceRoutingDatasource">
        <property name="targetDataSources">
            <map key-type="java.lang.Long" />            
        </property>
    </bean>


    <!--  MANAGER  -->
    <bean id="abstractManager" abstract="true">
        <!--property name="sessionFactory" ref="sessionFactory"/-->
    </bean>

    <bean id="occResourceManager" class="org.gbif.provider.service.impl.OccResourceManagerHibernate" parent="abstractManager"/>
    <bean id="checklistResourceManager" class="org.gbif.provider.service.impl.DatasourceBasedResourceManagerHibernate" parent="abstractManager">        
        <constructor-arg value="org.gbif.provider.model.ChecklistResource"/>
    </bean>
    <bean id="resourceManager" class="org.gbif.provider.service.impl.ResourceManagerHibernate" parent="abstractManager">        
        <constructor-arg value="org.gbif.provider.model.Resource"/>
    </bean>

    <bean id="viewMappingManager" class="org.gbif.provider.service.impl.GenericManagerHibernate" parent="abstractManager">        
        <constructor-arg value="org.gbif.provider.model.ViewMappingBase"/>
    </bean>    
    
    <bean id="extensionManager" class="org.gbif.provider.service.impl.GenericManagerHibernate" parent="abstractManager">        
        <constructor-arg value="org.gbif.provider.model.Extension"/>
    </bean>    
    
    <bean id="uploadEventManager" class="org.gbif.provider.service.impl.UploadEventManagerHibernate" parent="abstractManager"/>        
    
    <bean id="darwinCoreManager" class="org.gbif.provider.service.impl.DarwinCoreManagerHibernate" parent="abstractManager"/>        
        
    <bean id="taxonManager" class="org.gbif.provider.service.impl.TaxonManagerHibernate" parent="abstractManager"/>        

    <bean id="regionManager" class="org.gbif.provider.service.impl.RegionManagerHibernate" parent="abstractManager"/>        

    <bean id="extensionRecordManager" class="org.gbif.provider.service.impl.ExtensionRecordManagerJDBC" >
        <property name="dataSource" ref="dataSource"/>        
    </bean>

    <bean id="datasourceInspectionManager" class="org.gbif.provider.service.impl.DatasourceInspectionManagerJDBC">        
        <property name="dataSource" ref="externalResourceRoutingDatasource"/>
    </bean>
    
    <bean id="tabFileProcessManager" class="org.gbif.provider.service.impl.TabFileProcessManagerImpl"/>        
    
    <bean id="resourceFactory" class="org.gbif.provider.service.impl.ResourceFactoryImpl">        
        <constructor-arg ref="extensionManager"/>
    </bean>

    


    <!-- LOGGING -->
    <bean id="logEventDao" class="org.gbif.logging.dao.hibernate.LogEventDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="logEventManager" class="org.gbif.logging.service.impl.LogEventManagerImpl">
        <constructor-arg ref="logEventDao"/>
    </bean>
    <!-- Configure the i18n Log4J appender -->
    <bean id="i18nDatabaseAppender" class="org.gbif.logging.log.I18nDatabaseAppender">
        <property name="logEventDao" ref="logEventDao"/>
    </bean>


    
    <!-- TASK EXECUTOR -->

    <bean id="uploadExecutor" factory-method="newSingleThreadExecutor" class="java.util.concurrent.Executors" >
        <!-- max number of concurrent uploads -->
        <!--constructor-arg value="1"/-->
    </bean>
    <bean id="processingExecutor" factory-method="newFixedThreadPool" class="java.util.concurrent.Executors" >
        <!-- max number of concurrent processing threads. Default is 2x max concurrent uploads -->
        <constructor-arg value="2"/>
    </bean>
    <bean id="occUploadTask" scope="prototype" class="org.gbif.provider.upload.OccUploadTask" />
    <bean id="taxonomyBuilder" scope="prototype" class="org.gbif.provider.upload.TaxonomyBuilder" />
    <bean id="geographyBuilder" scope="prototype" class="org.gbif.provider.upload.GeographyBuilder"/>

    <bean id="cacheManager" class="org.gbif.provider.service.impl.CacheManagerImpl" parent="abstractManager">
        <property name="uploadExecutor" ref="uploadExecutor"/>
        <property name="processingExecutor" ref="processingExecutor"/>
        <lookup-method name="newOccUploadTask" bean="occUploadTask"/>
        <lookup-method name="newOccProcessingTask" bean="processingTask"/>
    </bean>
    
    
</beans>