<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.gbif</groupId>
	<artifactId>ipt</artifactId>
	<packaging>war</packaging>
	<version>2.0.1-SNAPSHOT</version>
	<name>IPT</name>
	<description>The GBIF Integrated Publishing Toolkit</description>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://tools.gbif.org/maven/sites/license.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<organization>
		<name>Global Biodiversity Information Facility</name>
		<url>http://www.gbif.org</url>
	</organization>

	<scm>
		<connection>
			scm:svn:http://gbif-providertoolkit.googlecode.com/svn/trunk/</connection>
		<developerConnection>
			scm:svn:https://gbif-providertoolkit.googlecode.com/svn/trunk/</developerConnection>
		<url>
			http://code.google.com/p/gbif-providertoolkit/source/browse#svn/trunk/</url>
	</scm>

	<issueManagement>
		<system>Google Code</system>
		<url>http://code.google.com/p/gbif-providertoolkit/issues/list</url>
	</issueManagement>

	<developers>
		<developer>
			<name>Tim Robertson</name>
			<email>trobertson@gbif.org</email>
		</developer>
		<developer>
			<name>Jose Cuadre Morales</name>
			<email>jcuadra@gbif.org</email>
		</developer>
		<developer>
			<name>Markus DÃ¶ring</name>
			<email>mdoering@gbif.org</email>
		</developer>
	</developers>

	<repositories>
		<repository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>gbif-new</id>
			<url>http://repository.gbif.org/content/groups/gbif</url>
		</repository>
		<repository>
			<id>gbif-thirdparty</id>
			<url>http://repository.gbif.org/content/repositories/thirdparty</url>
		</repository>
		<!-- TODO: This reference needs to be removed as the repository is deprecated -->
		<repository>
			<id>gbif</id>
			<url>http://tools.gbif.org/maven/repository</url>
		</repository>
		
	</repositories>

	<build>
		<finalName>ipt-${project.version}-r${buildNumber}</finalName>
		<defaultGoal>jetty:run</defaultGoal>
		<plugins>

			<!-- To simplify development, allows developers to use "mvn jetty:run" -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.16</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<connectors>
						<connector
							implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>7001</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
				</configuration>
			</plugin>
			<!-- IPT is built for 1.5 to be widely compatible -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<!--
			small plugin that allows to access the projects SVN revision number.
			Useful to keep the pom ipt version at 1.x-SNAPSHOT while still having a unique build number
			See: http://mojo.codehaus.org/buildnumber-maven-plugin/usage.html
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.0-beta-4</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>${devModeNegated}</doCheck>
					<doUpdate>${devModeNegated}</doUpdate>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<additionalBuildcommands>
						<buildcommand>
							com.atlassw.tools.eclipse.checkstyle.CheckstyleBuilder</buildcommand>
					</additionalBuildcommands>
					<additionalConfig>
						<file>
							<name>.checkstyle</name>
							<url>
								http://rs.gbif.org/conventions/java-style-config.xml</url>
						</file>
					</additionalConfig>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>

					<!-- dont bundle local datadir.location file with generated war -->
					<excludes>**/datadir.location</excludes>
				</configuration>
			</plugin>

		</plugins>

		<resources>

			<!-- The default resources will all be filtered, i.e. maven variables ${xyz} will be replaced by maven -->
			<resource>
				<directory>src/main/resources</directory>

				<!-- exclude the following files, as they use the same ${} syntax for non maven variables -->
				<excludes>
					<exclude>ApplicationResources*.properties</exclude>
					<exclude>struts*.xml</exclude>
				</excludes>
				<filtering>true</filtering>
			</resource>
			<resource>

				<!-- finally include the excluded files again without filtering -->
				<directory>src/main/resources</directory>
				<includes>
					<include>ApplicationResources*.properties</include>
					<include>struts*.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
		</resources>
		<testResources>
			<!-- with filtering copying big test files becomes VERY slow -->
			<testResource>
				<directory>src/test/resources</directory>
				<excludes>
					<exclude>*.properties</exclude>
				</excludes>
				<filtering>false</filtering>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<includes>
					<include>*.properties</include>
				</includes>
				<filtering>true</filtering>
			</testResource>
		</testResources>
	</build>

	<dependencies>
		<!-- GBIF libs -->
		<dependency>
			<groupId>org.gbif</groupId>
			<artifactId>dwca-reader</artifactId>
			<version>1.7.5-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.gbif</groupId>
			<artifactId>gbif-common</artifactId>
			<version>0.0.2</version>
		</dependency>
		<dependency>

			<!-- To redirect calls to SLF4J from dwca-reader & gbif-common to Log4J -->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
		</dependency>

		<!-- Struts2 -->
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-core</artifactId>
			<version>2.2.1</version>
			<exclusions>
				<!-- not needed - we use guice -->
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-test</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- required by OGNL/struts2 since version 2.2.x -->
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.8.0.GA</version>
		</dependency>


		<!-- Guice provides the code based (not XML based) injection dependency framework -->
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>2.0</version>
			<exclusions>

				<!-- superceded by guava and causing exceptions under tomcat6 -->
				<!--
				java.lang.NoSuchMethodError com.google.common.collect.ImmutableList.copyOf(Ljava/util/Collection;)
				-->
				<exclusion>
					<groupId>com.google.code.google-collections</groupId>
					<artifactId>google-collect</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- connector to use guice natively with struts2 -->
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-struts2-plugin</artifactId>
			<version>2.0</version>
			<exclusions>
				<!-- clashes with newer version included in struts2.1.6  -->
				<exclusion>
					<groupId>opensymphony</groupId>
					<artifactId>xwork</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ognl</groupId>
					<artifactId>ognl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-assisted-inject</artifactId>
			<version>2.0</version>
		</dependency>

		<!-- Used for the SimpleTextProvider in Struts2 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<!-- need it for standalone, embedded jetty
			<scope>provided</scope>
			-->
			<version>2.0</version>
		</dependency>

		<!-- Jetty to use as an embedded server-->
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>6.1.25</version>
		</dependency>

		<!-- Google base libraries, e.g. collections
		Used for equals & hash method a lot and in EML by Aaron
		-->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>r03</version>
		</dependency>


		<!-- H2 is a lightweight embedded Java database. We consider using it for the portal webapp -->
		<!--
		<dependency>
		<groupId>com.h2database</groupId>
		<artifactId>h2</artifactId>
		<version>1.2.138</version>
		</dependency>
		-->


		<!-- Accessing different external databases to suck in data alternatively to text files -->
		<!-- JDBC driver to support a variety of external datasources -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.13</version>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>8.4-701.jdbc3</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jtds</groupId>
			<artifactId>jtds</artifactId>
			<version>1.2.5</version>
		</dependency>
		<dependency>
			<groupId>ojdbc</groupId>
			<artifactId>ojdbc</artifactId>
			<version>14</version>
		</dependency>

		<!--
		Log4j used directly
		PLEASE DONT USE COMMONS-LOGGING !!!
		there are some know classloader issues when used with tomcat
		-->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>


		<!-- Commons lang provides utilities for (e.g.) simple hashcode building -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
		</dependency>

		<!-- native java io cannot handle redirects -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.0.3</version>
		</dependency>

		<!-- Simple XML Parsing -->
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>2.0</version>
		</dependency>


		<!-- XStream for resource config data persistency (could be replaced by JAXB in the future) -->
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.3</version>
		</dependency>

		<!-- for reading compressed archives -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.0</version>
		</dependency>

		<!-- file utils -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- Lucene, full text search -->
		<!--dependency>
		<groupId>org.apache.lucene</groupId>
		<artifactId>lucene-core</artifactId>
		<version>3.0.2</version>
		</dependency-->

		<!-- rtf generation -->
		<!-- 
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>2.1.7</version>
		</dependency>
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext-rtf</artifactId>
			<version>2.1.7</version>
		</dependency>
		-->
		
		<!-- testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.5</version>
			<scope>test</scope>
		</dependency>

		<!-- JSON representation -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>1.4</version>
			<scope>compile</scope>
		</dependency>


		<!-- testing only. Shows the struts2 configuration in the browser at /config-browser/index.do -->
		<!--
		<dependency>
		<groupId>org.apache.struts</groupId>
		<artifactId>struts2-config-browser-plugin</artifactId>
		<version>2.1.8</version>
		</dependency>
		-->
	</dependencies>

	<profiles>
		<!-- Settings used for an IPT release -->
		<profile>
			<id>release</id>
			<properties>
				<devMode>false</devMode>
				<devModeNegated>true</devModeNegated>
			</properties>
		</profile>

		<!-- Settings used for the IPT demo installation -->
		<profile>
			<id>gbif</id>
			<properties>
				<devMode>false</devMode>
				<devModeNegated>true</devModeNegated>
				<ipt.baseURL>http://ipt.gbif.org/</ipt.baseURL>
			</properties>
		</profile>

	</profiles>

	<!--
	Default settings used mainly for development.
	To build a release please use -P release
	-->
	<properties>
		<!-- This project uses UTF8 for Regular Expressions -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!--
		maven treats properties as strings only, so we cannot negate a boolean devMode value.
		Therefore we keep both available - make sure they are always negated in all profiles!
		-->
		<devMode>true</devMode>
		<devModeNegated>false</devModeNegated>

		<analytics.key></analytics.key>
		<ipt.frontPageImageURL></ipt.frontPageImageURL>
		<google.maps.key></google.maps.key>
		<ipt.baseURL></ipt.baseURL>
		<!-- The datadir for tests that use a guice injected DataDir object -->
		<test.datadir>/tmp/test-datadir</test.datadir>
	</properties>
</project>
