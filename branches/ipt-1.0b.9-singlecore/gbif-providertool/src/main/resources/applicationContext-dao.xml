<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"
       default-lazy-init="true">

    <!--  Entity Interceptor bean - sets audit fields for each persistent object -->
    <bean id="entityInterceptor" class="org.gbif.provider.model.hibernate.AuditInterceptor">
    </bean>
    
    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="entityInterceptor"><ref local="entityInterceptor"/></property>
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=${hibernate.dialect}
                hibernate.query.substitutions=true 'Y', false 'N'
                hibernate.cache.use_second_level_cache=true
                hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
            </value>
            <!-- Turn batching off for better error messages under PostgreSQL -->
            <!-- hibernate.jdbc.batch_size=0 -->
        </property>
        <property name="namingStrategy" ref="namingStrategy"/>
    </bean>

    <bean id="namingStrategy" class="${hibernate.namingStrategy}"/>
    
    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- UniversalDao - can be used when doing standard CRUD - made available 
        for those who don't mind casting.  If you don't want to cast, look at 
        'fooDao' below. -->
    <bean id="universalDao" class="org.appfuse.dao.hibernate.UniversalDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="lookupDao" class="org.appfuse.dao.hibernate.LookupDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="userDao" class="org.appfuse.dao.hibernate.UserDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="roleDao" class="org.appfuse.dao.hibernate.RoleDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    



    <!-- external datasource routing/registry -->
    
    <bean id="datasourceRegistry" class="org.gbif.provider.datasource.DatasourceRegistry" />
    
    <bean id="externalResourceRoutingDatasource" class="org.gbif.provider.datasource.ExternalResourceRoutingDatasource">
        <property name="targetDataSources">
            <map key-type="java.lang.Long" />            
        </property>
    </bean>

    <!--  IPT MANAGER  -->
    <bean id="abstractManager" abstract="true">
        <!--property name="sessionFactory" ref="sessionFactory"/-->
    </bean>
    <bean id="abstractJDBCManager" abstract="true">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="annotationManager" class="org.gbif.provider.service.impl.AnnotationManagerHibernate" parent="abstractManager"/>
    
    <bean id="occResourceManager" class="org.gbif.provider.service.impl.OccResourceManagerHibernate" parent="abstractManager"/>
    <bean id="checklistResourceManager" class="org.gbif.provider.service.impl.ChecklistResourceManagerHibernate" parent="abstractManager"/>            
    <bean id="dataResourceManager" class="org.gbif.provider.service.impl.DataResourceManagerHibernate" parent="abstractManager">        
        <constructor-arg value="org.gbif.provider.model.DataResource"/>
    </bean>
    <bean id="resourceManager" class="org.gbif.provider.service.impl.GenericResourceManagerHibernate" parent="abstractManager">        
        <constructor-arg value="org.gbif.provider.model.Resource"/>
    </bean>
    
    <bean id="resourceKeywordManager" class="org.gbif.provider.service.impl.ResourceKeywordManagerJDBC" parent="abstractJDBCManager"/>
    
    <bean id="sourceManager" class="org.gbif.provider.service.impl.SourceManagerHibernate" parent="abstractManager"/>
    
    <bean id="viewMappingManager" class="org.gbif.provider.service.impl.ViewMappingManagerHibernate" parent="abstractManager"/>        
    
    <bean id="propertyMappingManager" class="org.gbif.provider.service.impl.GenericManagerHibernate" parent="abstractManager">        
        <constructor-arg value="org.gbif.provider.model.PropertyMapping"/>
    </bean>    
    
    <bean id="transformationManager" class="org.gbif.provider.service.impl.TransformationManagerHibernate" parent="abstractManager"/>        
    
    <bean id="termMappingManager" class="org.gbif.provider.service.impl.TermMappingManagerHibernate" parent="abstractManager"/>        
    
    <bean id="extensionManager" class="org.gbif.provider.service.impl.ExtensionManagerHibernate" parent="abstractManager"/>        
    
    <bean id="extensionPropertyManager" class="org.gbif.provider.service.impl.ExtensionPropertyManagerHibernate" parent="abstractManager"/>        
    
    <bean id="thesaurusManager" class="org.gbif.provider.service.impl.ThesaurusManagerHibernate" parent="abstractManager"/>        
    
    <bean id="uploadEventManager" class="org.gbif.provider.service.impl.UploadEventManagerHibernate" parent="abstractManager"/>        
    
    <bean id="occStatManager" class="org.gbif.provider.service.impl.OccStatManagerHibernate" parent="abstractManager"/>        
    
    <bean id="darwinCoreManager" class="org.gbif.provider.service.impl.DarwinCoreManagerHibernate" parent="abstractManager"/>        
    
    <bean id="taxonManager" class="org.gbif.provider.service.impl.TaxonManagerHibernate" parent="abstractManager"/>        
    
    <bean id="regionManager" class="org.gbif.provider.service.impl.RegionManagerHibernate" parent="abstractManager"/>        
    
    <bean id="hqlTester" class="org.gbif.provider.service.impl.HqlTesterHibernate" parent="abstractManager"/>        
    
    <bean id="emlManager" class="org.gbif.provider.service.impl.EmlManagerImpl"/>        
    
    <bean id="registryManager" class="org.gbif.provider.service.impl.RegistryManagerImpl"/>        
    
    <bean id="geoserverManager" class="org.gbif.provider.service.impl.GeoserverManagerImpl" />
    
    <bean id="extensionFactory" class="org.gbif.provider.service.util.ExtensionFactory"/>
    
    <!-- cache / import manager -->
    <bean id="extensionRecordManager" class="org.gbif.provider.service.impl.ExtensionRecordManagerJDBC"  parent="abstractJDBCManager"/>
    
    <bean id="sourceInspectionManager" class="org.gbif.provider.service.impl.SourceInspectionManagerImpl">        
        <property name="dataSource" ref="externalResourceRoutingDatasource"/>
    </bean>
    
    <bean id="imageCacheManager" class="org.gbif.provider.service.impl.ImageCacheManagerImpl" />
    
    <bean id="dataArchiveManager" class="org.gbif.provider.service.impl.DataArchiveManagerImpl" parent="abstractManager"/>
    
    <bean id="cacheManager" class="org.gbif.provider.service.impl.CacheManagerJDBC"  parent="abstractJDBCManager" lazy-init="true">
        <lookup-method name="newOccUploadTask" bean="occUploadTask"/>
        <lookup-method name="newChecklistUploadTask" bean="checklistUploadTask"/>
    </bean>
    
    <bean id="resourceFactory" class="org.gbif.provider.service.impl.ResourceFactoryImpl">        
        <constructor-arg ref="extensionManager"/>
    </bean>
    <bean id="darwinCoreFactory" class="org.gbif.provider.service.impl.DarwinCoreFactoryImpl"/>        
    
    <!-- FULL TEXT SEARCHING -->
    <bean id="fullTextSearchManager" class="org.gbif.provider.service.impl.FullTextSearchManagerLucene" />
    
</beans>
