#summary How to help us make IPT even better

= Developing IPT on Mac OS X =

The following describes a typical Eclipse development setup for working with IPT source code in the following environment:
 * OS X 10.5.8
 * Java 1.5.0_19 
 * Eclipse 3.5
 * Subclipse 1.6 (Eclipse Plugin)
 * Maven 2.0.9
 * M2Eclipse [http://m2eclipse.sonatype.org/update-dev development build] (Eclipse Plugin)

=== Check out the IPT source code ===
Using Subclipse, *check out as a project in the workspace* the main line of IPT development and name the project *ipt*:

{{{
https://gbif-providertoolkit.googlecode.com/svn/trunk/gbif-providertool
}}}

=== Enable dependency management ===
Using M2Eclipse, *Enable Dependency Management* for the *ipt* project. You will see build errors, which can be fixed by adding the following two libraries to the *ipt* project build path:

{{{
ipt/target/warpath/appfuse-struts-2.0.2.warpath.jar
ipt/target/warpath/appfuse-web-common-2.0.2.warpath.jar
}}}

=== Create a run configuration for launching the IPT web app ===
Create a new Maven Build run configuration and name it *ipt-eclipse*. 

In the *Main* tab of the *ipt-eclipse* run configuration, type *eclipse* in the *Profiles* box. Select the *Update Snapshots* and *Skip Tests* checkboxes. For the *Maven Runtime* option, click the *Configure...* button, add the *External* Maven installation on your machine, click *Okay*, and then select it as the *Maven Runtime*.

In the *JRE* tab of the *ipt-eclipse* run configuration, type the following *VM arguments*:

{{{
-Xmx1048m -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=4000,server=y,suspend=n
}}}

