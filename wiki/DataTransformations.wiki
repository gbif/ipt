#summary Documenting data transformations
#sidebar TableOfContents

<wiki:toc max_depth="3" />

= Introduction =
In many cases the soruce data does not easily map to given darwin core terms or defined extensions.
In order to support these data sources, one usually has to do some __data transformations__ which can be reduced to a certain number of common patterns or transformation types, that are applied in different scenarios.

Looking at the IPT data flow, transformations have to happen before data is mapped onto the final darwin core.
To provide context, a few examples might include:

== Use Cases ==
 * A data source has common names separated into separate columns, one for English, one for French, one for German.  To transform the data to the target schema,  these three columns would be transformed to three rows,  with one column containing the common name and one column containing the language reference.
 * A data source as latitude and longitude separated into a degree column, a minutes column, and a second column.  To transform the data to the target schema would require concatenization into latitude and longitude columns
 * A classification is expressed in a series of columns with kingdom, phylum, class, order, etc repeated for every row down to species. To transform the data to the target schema would require converting this denormalized form to a normal “parent-child” adjacency list.


= Transformation Types =
== Pivots ==
http://gbif-providertoolkit.googlecode.com/svn/trunk/gbif-providertool/src/main/webapp/images/transformations/1.png

== Normalisation ==
http://gbif-providertoolkit.googlecode.com/svn/trunk/gbif-providertool/src/main/webapp/images/transformations/2.png

== ID Lookup ==
http://gbif-providertoolkit.googlecode.com/svn/trunk/gbif-providertool/src/main/webapp/images/transformations/3.png

== Term Lookup ==
http://gbif-providertoolkit.googlecode.com/svn/trunk/gbif-providertool/src/main/webapp/images/transformations/4.png

This is already implemented in the current IPT when mapping controlled vocabularies.
It would be desirable to allow term translations in any property mapping, regardless whether the term defines a controlled vocabulary or not.

== Concatenation ==
http://gbif-providertoolkit.googlecode.com/svn/trunk/gbif-providertool/src/main/webapp/images/transformations/5.png

Concatenating multiple columns and fixed strings.

== Substring splitting ==
Splitting column values into substrings


= IPT Implementation =
 * on file level or rather as a temporary H2 database?
 * H2 would allow to do many of the transformations as simple SQL views, not producing any new files at all!
   # initially import all files or external SQL sources into H2
   # define h2 sql views
   # run final import/dwc-a generation on intermediate h2 db