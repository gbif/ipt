#summary Details about the embedded H2 database cache and how to access it
#sidebar TableOfContents

The IPT keeps all its data and most configuration in an internal embedded H2 database.
The instructions found here help you to access this data directly. 
Please be aware that any modifications done to this database may corrupt the IPT!
Before modifying any data yourself, please make a backup of your data directoy.

<wiki:toc max_depth="2" />

= The H2 Database =
The database used for caching the data and storing most configurations is a pure Java RDBMS known as H2.
Detailed informations about it can be found at http://www.h2database.com/

We have chosen H2 for several reasons:
 * it is written purely in java which is the language we use for the IPT.
 * it can run in embedded and server mode
 * it is faster than similar alternative databases

The database can be accessed directly in 2 mayor ways:


== Access via the web console ==
H2 comes with a web console similar to PhpMyAdmin. By default the IPT disables the console to prevent others from manipulating your database. In order to enable it you have to remove the comments from your WEB-INF/web.xml setting for the H2Console (close to the bottom of the file):

{{{
<!--
-->  
    <servlet> 
        <servlet-name>H2Console</servlet-name> 
        <servlet-class>org.h2.server.web.WebServlet</servlet-class> 
        <init-param>
            <param-name>-webAllowOthers</param-name> 
            <param-value>true</param-value> 
        </init-param>
        <load-on-startup>1</load-on-startup> 
    </servlet> 
    
    <servlet-mapping> 
        <servlet-name>H2Console</servlet-name> 
        <url-pattern>/h2/*</url-pattern> 
    </servlet-mapping>     
}}}

=== Log into console ===
When you have enabled the console and restarted Tomcat, you will be able to access the console by appending `/h2` to your IPT URL, e.g. `http://localhost:8080/ipt/h2`

You are prompted to enter login/connection details for H2 now.
The only thing you *need* to change is the jdbc url. You will have to enter the absolute path to your data directory in this url and append it with `/db/ipt;auto_server=true`

For example:
{{{
dataDir = /Users/jose/Desktop/ipt-data
jdbcUrl = jdbc:h2:/Users/jose/Desktop/ipt-data/db/ipt;auto_server=true
}}}

On windows make sure you dont use spaces, use forward slashes and omit the drive name:
{{{
dataDir = C:\iptdata
jdbcUrl = jdbc:h2:/iptdata/db/ipt;auto_server=true
}}}


== Access via JDBC ==
You can also access the H2 database directly via JDBC even if the IPT is not running. 
To do this you need the H2 1.1.x.jar and use the following connection settings:
{{{
 driverClassName=org.h2.Driver
 url=jdbc:h2:${datadir}/db/ipt;auto_server=true
 username=sa
 password=
}}}

In case you use the spring framework the following bean will create an IPT datasource:
{{{
  <bean id="dataSource" class="org.h2.jdbcx.JdbcDataSource">
      <property name="URL" value="jdbc:h2:${datadir}/db/ipt;auto_server=true"/>
      <property name="user" value="sa"/>
      <property name="password" value=""/>
  </bean>
}}}
To get better performance you should better use a connection pool such as DBCP:
{{{
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
      <property name="driverClassName" value="org.h2.Driver"/>
      <property name="url" value="jdbc:h2:${datadir}/db/ipt;auto_server=true"/>
      <property name="username" value="sa"/>
      <property name="password" value=""/>
      <!-- number of max active connections -->
      <property name="maxActive" value="100"/>
      <property name="maxWait" value="1000"/>
      <property name="poolPreparedStatements" value="true"/>
      <property name="defaultAutoCommit" value="true"/>
  </bean>
}}}