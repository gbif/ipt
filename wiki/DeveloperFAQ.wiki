#summary Developer Frequently Asked Questions

<wiki:toc max_depth="2" />

= Configuration files =
 * web.xml
 * struts.xml (configures all actions and URL mappings)
 * hibernate.cfg.xml
 * urlrewrite.xml (RESTFUL to url parameter rewriting)
 * applicationContext.xml (Spring beans) 
   # applicationContext-dao.xml
   # applicationContext-i18n-maps.xml
   # applicationContext-resources.xml
   # applicationContext-service.xml 
   # applicationContext-struts.xml
   # applicationContext.xml

== Properties Files ==
 * application.properties (IPT app settings) 
 * ipt.properties (user configurable domain, base URL, data directory, mail settings)
 * velocity.properties (static)
 * displaytag.properties (static)
 * xwork-conversion.properties (static)

= Html templates/rendering =
== Page layout ==
 * src/main/webapp/WEB-INF/decorators.xml
 * src/main/webapp/WEB-INF/sitemesh.xml

= Architecture =
IPT uses a simple 2-Tier architecture with DAO and services merged into a single service layer. With the exception of AppFuse user management is 3-tier DAO and services - which should be migrated to 2tiers when moving into ipt packages.

= Points of Interest in code =

== IPT data directory layout ==
See AppConfig in particular. The web context property resolver is used to find the absolute webapp dir at runtime regardless of which app server and JVM location.
{{{
WebContextPropertyResolver.java
AppConfig.java
}}}

== Upload Process ==

http://www.websequencediagrams.com/cgi-bin/cdraw?lz=U291cmNlLT5JbXBvcnRBY3Rpb246IHVwbG9hZAoACQwtPkNhY2hlTWFuYWdlcjogcnVuVQAgBm5vdGUgcmlnaHQgb2YgABgOQXN5bmNocm9ub3VzIGNvdXBsaW5nIHVzaW5nIEpESyBGdXR1cmU8AEQGRXZlbnQ-CgBcDACBEQhUYXNrOiBjYWxsKCkAgRAHVGFzawARDmluaXQoKQCBAQ8ANAxyZXNldACBAwVudHMsIAAIBWZsYWdzIChlLmcuIGRlcml2ZWRUYXhvbm9teT8AXQ4AgXIOcHJlcGFyZQCBfgYAbghvdmVyAIFzD2ZsYWdBc0RlbGV0ZWRcbnJlbW92ZUQAYwZEYXRhIChFLmcuIHQAbgZpYyAvIGdlb2dyYXBoaWNhbCBoaWVyYXJjaGllcykANwhTdGF0cwBECEV4dGVuc2lvbkRhdGEAWQhBcmNoaXZlcwCCHw0AgX8NaQCDbAVDb3JlAIIWHWRldGVybWluZSBpZiBtb2RpZmllZFxudXBkYXRlIC8gaW5zZXJ0c1xuY3JlYXRlIGFubm90YXRpb25zIGZvciBiYWQgcm93cwpsb29wIEZvciBlYWNoIGUAgS0IIHR5cGUKIACDHAsAg0UPAIUTBQCBWwkoKQogIACCYQoAVVVlbmQAhGgcbG9zZQCEdg8AhFUQb2x2ZSBpZHMgcmVmZXJlbmNlZCBieSBuYW1lIGZpZWxkcyAoYmFzaW9ueW1zLCBoaWdoZXIgdGF4YSBldGMAQRsAglcHZSBhbWJpZ3VvdXMAUAUAg0wbYnVpbGQgbmVzdGVkAIVrBigAYwUAhFsLZXMAgTMbAINiB3N0YXQARSFEd0MtQQCEWBpnZW5lcmF0ZSBMdWNlbmUgaW5kZXgK&s=modern-blue&foo.png

[http://www.websequencediagrams.com/?lz=U291cmNlLT5JbXBvcnRBY3Rpb246IHVwbG9hZAoACQwtPkNhY2hlTWFuYWdlcjogcnVuVQAgBm5vdGUgcmlnaHQgb2YgABgOQXN5bmNocm9ub3VzIGNvdXBsaW5nIHVzaW5nIEpESyBGdXR1cmU8AEQGRXZlbnQ-CgBcDACBEQhUYXNrOiBjYWxsKCkAgRAHVGFzawARDmluaXQoKQCBAQ8ANAxyZXNldACBAwVudHMsIAAIBWZsYWdzIChlLmcuIGRlcml2ZWRUYXhvbm9teT8AXQ4AgXIOcHJlcGFyZQCBfgYAbghvdmVyAIFzD2ZsYWdBc0RlbGV0ZWRcbnJlbW92ZUQAYwZEYXRhIChFLmcuIHQAbgZpYyAvIGdlb2dyYXBoaWNhbCBoaWVyYXJjaGllcykANwhTdGF0cwBECEV4dGVuc2lvbkRhdGEAWQhBcmNoaXZlcwCCHw0AgX8NaQCDbAVDb3JlAIIWHWRldGVybWluZSBpZiBtb2RpZmllZFxudXBkYXRlIC8gaW5zZXJ0c1xuY3JlYXRlIGFubm90YXRpb25zIGZvciBiYWQgcm93cwpsb29wIEZvciBlYWNoIGUAgS0IIHR5cGUKIACDHAsAg0UPAIUTBQCBWwkoKQogIACCYQoAVVVlbmQAhGgcbG9zZQCEdg8AhFUQb2x2ZSBpZHMgcmVmZXJlbmNlZCBieSBuYW1lIGZpZWxkcyAoYmFzaW9ueW1zLCBoaWdoZXIgdGF4YSBldGMAQRsAglcHZSBhbWJpZ3VvdXMAUAUAg0wbYnVpbGQgbmVzdGVkAIVrBigAYwUAhFsLZXMAgTMbAINiB3N0YXQARSFEd0MtQQCEWBpnZW5lcmF0ZSBMdWNlbmUgaW5kZXg&s=modern-blue Edit]

== Internationalization ==
Internationalisation is done on templates (.ftl, .jsp) and action classes using java resource bundles in src/main/resources/ApplicationResources.properties. Resource bundles finally have to be encoded as latin1 and other unicode characters need to be escaped. This is ok for western languages with few special unicode characters, but especially for asian languages this is unwieldy. We therefore encode the proeprty files in UTF8 and use the native2ascii maven plugin to process the files into valid property files.

 * [http://struts.apache.org/2.x/docs/text.html Struts2 i18n]
 * http://java.sun.com/j2se/1.5.0/docs/tooldocs/windows/native2ascii.html
 * http://mojo.codehaus.org/native2ascii-maven-plugin/native2ascii-mojo.html

A nice tool to help translation is Attesoro. It will mean we have to work with valid property files from the beginning though, removing the native2ascii plugin and utf8 bundles:
 * http://attesoro.org/screenshot.html

To add new internationalization follow these steps:
  * Download Attesoro from http://attesoro.org/download.html
  * Download the default properties file ApplicationResources.properties from the gbif-providertoolkit project site (http://gbif-providertoolkit.googlecode.com/svn/trunk/gbif-providertool/src/main/resources/ApplicationResources.properties).
  * In the same location as the default properties in the previous step, download the properties file from the gbif-providertoolkt project site for the language to which you wish to translate. For example, for the French properties file, download http://gbif-providertoolkit.googlecode.com/svn/trunk/gbif-providertool/src/main/resources/ApplicationResources-fr.properties.
  * Open the Attesoro jar file (e.g., attesoro_1_8.jar). It is an executable jar file that will run as an application if you have Java installed on your system. Otherwise you will have to install Java and then run the Attesoro jar file.
  * In Attesoro, select the File->Open menu item and open the ApplicationResources.properties file downloaded from the gbif-providertoolkit project site in a previous step, above. If you have done all of the previous steps correctly you should see a screen such as the following:

http://gbif-providertoolkit.googlecode.com/files/Attesoro-fr.png

The panel at the upper left contains the name of the default properties file and, beneath it, any language-specific property files in the same location (files that follow the convention {propertyfilename}-lc.properties, where lc is the two-letter language code). Select a language from the list to see and edit properties in that language.

The panel in the lower left contains the list of properties in the default properties file. Properties rendered in blue on the list have a default value, but no corresponding value in the selected language. Select a property from the list to view and edit the value and the comment for that property in the selected language.

The panel in the upper right contains the value of the property. In the upper uneditable part of the panel following the label "Default Text:" is the value of the property in the default properties file. The text box below the label "Translated text:" is either empty or it contains the value of the property in the selected language properties file. The checkbox labeled "Use default" shows whether the property exists or not in that language properties file. Enter or edit the value of the property in the text box.

The panel in the lower right is similar in function to the value panel in the upper right, except that the value there is for the comment about the selected property.

To fully translate the properties file, enter or edit the translated text and (optionally) the comment for each property on the list for the selected language. When finished, select the File->Save menu to overwrite the original property file for the language you are translating. When you feel that you have a final product, either add the contents of the ApplicationResources-{lc}.properties file to the wiki page for that language, create a new one if it doesn't exist, or send it to a project owner who can add it for you. To add or change wiki page content you must have be a project member with EditWiki privileges. You can request to become a member by sending a request to people on the "Project owners:" list at http://code.google.com/p/gbif-providertoolkit/.

== Registry and Publication Process ==

== Lucene ==
Main index is across all metadata through all resources. There is also one for each resource that indexes each data.